---
- name: Configure OpenShift deployment for linux-system-roles CI testing
  hosts: localhost
  vars:
    test_harness_namespace: lsr-test-harness
    test_harness_sa: "system:serviceaccount:{{ test_harness_namespace }}:tester"
    test_harness_need_node_selector: true
    test_harness_run_as_root: true
    test_harness_node_selector:
      system-roles-ci: "true"
    test_harness_use_staging: true
    test_harness_use_production: false
  tasks:

  - name: Ensure python openshift client package is installed
    package:
      name: python3-openshift
      state: present
    become: true

  - fail:
      msg: You must set "test_harness_secrets_dir" in your inventory
    when: test_harness_secrets_dir is not defined

  - fail:
      msg: You must set "test_harness_config_dir" in your inventory
    when: test_harness_config_dir is not defined

  - fail:
      msg: You must set "test_harness_scc" in your inventory
    when: test_harness_scc is not defined

  # hmm - may need admin access for this
  - name: Ensure testing namespace is present
    k8s:
      name: "{{ test_harness_namespace }}"
      api_version: v1
      kind: Namespace
      state: present
    ignore_errors: true

  - name: Check if testing namespace is present
    k8s_info:
      name: "{{ test_harness_namespace }}"
      api_version: v1
      kind: Namespace
    register: register_namespace_present
    changed_when: false

  - fail:
      msg: The namespace "{{ test_harness_namespace }}" does not exist
    when: not register_namespace_present.resources | d([])

  - k8s_info:
      api_version: security.openshift.io/v1
      kind: SecurityContextConstraints
      name: "{{ test_harness_scc }}"
      namespace: "{{ test_harness_namespace }}"
    register: register_scc
    changed_when: false

  - name: Ensure tester sa is in test scc
    command: oc -n {{ test_harness_namespace }} patch scc/{{ test_harness_scc }} --type json \
      -p '[{"op":"add","path":"/users/-","value":"{{ test_harness_sa }}"}]'
    when: test_harness_sa not in register_scc.resources[0].users

  - name: Ensure secrets are present
    include_tasks: tasks/create-secrets.yml

  - name: Ensure staging is set up
    include_tasks: tasks/setup-ci-environ.yml
    vars:
      __test_harness_environ: staging
      __test_harness_cm_name: config-staging
      __test_harness_cm_file: config-staging.json
      __test_harness_ci_obj_file: ../openshift-objects-staging.yml
      __test_harness_dc: linux-system-roles-staging
      __test_harness_bc: linux-system-roles-staging
    when: test_harness_use_staging|bool

  - name: Ensure production is set up
    include_tasks: tasks/setup-ci-environ.yml
    vars:
      __test_harness_environ: production
      __test_harness_cm_name: config
      __test_harness_cm_file: config.json
      __test_harness_ci_obj_file: ../openshift-objects.yml
      __test_harness_dc: linux-system-roles
      __test_harness_bc: linux-system-roles
    when: test_harness_use_production|bool
