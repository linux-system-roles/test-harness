apiVersion: v1
kind: List
items:
  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      name: tester
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: linux-system-roles
    spec:
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: linux-system-roles:latest
        - name: staging
          from:
            kind: DockerImage
            name: linux-system-roles:staging
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: linux-system-roles-centos7
    spec:
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: linux-system-roles-centos7:latest
        - name: staging
          from:
            kind: DockerImage
            name: linux-system-roles-centos7:staging
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: linux-system-roles
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: linux-system-roles:latest
      resources: {}
      source:
        git:
          uri: https://github.com/linux-system-roles/test-harness
          ref: production
        type: Git
      strategy:
        type: Docker
      triggers:
      - type: ConfigChange
      - type: ImageChange
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: linux-system-roles-centos7
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: linux-system-roles-centos7:latest
      resources: {}
      source:
        git:
          uri: https://github.com/linux-system-roles/test-harness
          ref: production
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: Dockerfile.centos7
      triggers:
      - type: ConfigChange
      - type: ImageChange
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: linux-system-roles
    spec:
      replicas: 8
      selector:
        name: linux-system-roles
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - linux-system-roles
            from:
              kind: ImageStreamTag
              name: linux-system-roles:latest
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: linux-system-roles
        spec:
          serviceAccountName: tester
          restartPolicy: Always
          containers:
            - name: linux-system-roles
              image: linux-system-roles:latest
              volumeMounts:
                - name: secrets
                  mountPath: /secrets
                  readOnly: true
                - name: config
                  mountPath: /config
                  readOnly: true
                - name: cache
                  mountPath: /cache
              securityContext:
                privileged: true
                fsGroup: 1000
          volumes:
            - name: secrets
              secret:
                secretName: secrets
            - name: config
              configMap:
                name: config
            - name: cache
              emptyDir:
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: linux-system-roles-centos7
    spec:
      replicas: 8
      selector:
        name: linux-system-roles
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - linux-system-roles-centos7
            from:
              kind: ImageStreamTag
              name: linux-system-roles-centos7:latest
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: linux-system-roles-centos7
        spec:
          serviceAccountName: tester
          restartPolicy: Always
          containers:
            - name: linux-system-roles-centos7
              image: linux-system-roles-centos7:latest
              volumeMounts:
                - name: secrets
                  mountPath: /secrets
                  readOnly: true
                - name: config
                  mountPath: /config
                  readOnly: true
                - name: cache
                  mountPath: /cache
              securityContext:
                privileged: true
                fsGroup: 1000
          volumes:
            - name: secrets
              secret:
                secretName: secrets
            - name: config
              configMap:
                name: config
            - name: cache
              emptyDir:
